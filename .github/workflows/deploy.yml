name: Frontend CI/CD - Deploy Vite to EC2

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

permissions:
  contents: write

jobs:
  deploy-frontend:
    name: Build & Deploy Vite App to EC2
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Determine and Bump Version
        id: versioning
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          if [[ $LATEST_TAG =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
            PATCH=$((PATCH + 1))
            NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          else
            NEW_TAG="v1.0.0"
          fi
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "VERSION=$NEW_TAG" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Inject Version into Build
        run: |
          echo "VITE_APP_VERSION=$VERSION" >> .env.production

      - name: Build Project Using Vite
        run: npx vite build

      - name: Prepare Remote Folder
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p /tmp/vite-deploy/releases/${{ env.VERSION || 'develop' }}

      - name: Upload Build to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "dist/*"
          target: "/tmp/vite-deploy/releases/${{ env.VERSION || 'develop' }}"

      - name: Activate New Build (Blue-Green)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo rm -rf /var/www/html-old
            if [ -d /var/www/html ]; then
              sudo mv /var/www/html /var/www/html-old
            fi
            sudo cp -r /tmp/vite-deploy/releases/${{ env.VERSION || 'develop' }} /var/www/html
            sudo systemctl restart nginx
            echo "âœ… Deployed version ${{ env.VERSION || 'develop' }}"

      - name: Rollback Instructions
        run: |
          echo "To rollback, SSH into EC2 and run:"
          echo "sudo rm -rf /var/www/html"
          echo "sudo cp -r /var/www/html-old /var/www/html"
          echo "sudo systemctl restart nginx"